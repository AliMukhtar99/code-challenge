{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ali/Development/code/phase-2/code-challenge/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Transaction from \"./Transaction\";\n/*PSEUDOCODE \nfunction Transaction param(transactions, setTransacaction, setSearch and search)\n*/\n\nfunction TransactionsList({\n  search,\n  setSearch,\n  transactions,\n  setTransactions\n}) {\n  _s();\n\n  //filter transactions\n  //create a variable that will filter transactions\n  //define transactionFilter\n  const transactionFilter = transactions.filter(transaction => transaction.description.toLowerCase().includes(search.toLowerCase()));\n  const List = transactionFilter.map(transaction => {\n    return /*#__PURE__*/_jsxDEV(Transaction, {\n      transactions: transaction.transactions,\n      setTransactions: setTransactions,\n      date: transactions.date,\n      description: transaction.description,\n      category: transaction.category,\n      amount: transaction.amount,\n      id: transaction.id\n    }, transactions.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }); //useEffect and fetch to grab transactions from locoalhost\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\").then(response => response.json()).then(data => setTransactions(data));\n  }, [setTransactions]);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"ui celled striped padded table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), List]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/ali/Development/code/phase-2/code-challenge/src/components/TransactionsList.js"],"names":["React","useEffect","Transaction","TransactionsList","search","setSearch","transactions","setTransactions","transactionFilter","filter","transaction","description","toLowerCase","includes","List","map","date","category","amount","id","fetch","then","response","json","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;;AACA,SAASC,gBAAT,CAA0B;AACxBC,EAAAA,MADwB;AAExBC,EAAAA,SAFwB;AAGxBC,EAAAA,YAHwB;AAIxBC,EAAAA;AAJwB,CAA1B,EAKG;AAAA;;AACD;AACA;AAEA;AACA,QAAMC,iBAAiB,GAAGF,YAAY,CAACG,MAAb,CAAqBC,WAAD,IAC5CA,WAAW,CAACC,WAAZ,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+CT,MAAM,CAACQ,WAAP,EAA/C,CADwB,CAA1B;AAIA,QAAME,IAAI,GAAGN,iBAAiB,CAACO,GAAlB,CAAuBL,WAAD,IAAiB;AAClD,wBACE,QAAC,WAAD;AACE,MAAA,YAAY,EAAEA,WAAW,CAACJ,YAD5B;AAEE,MAAA,eAAe,EAAEC,eAFnB;AAIE,MAAA,IAAI,EAAED,YAAY,CAACU,IAJrB;AAKE,MAAA,WAAW,EAAEN,WAAW,CAACC,WAL3B;AAME,MAAA,QAAQ,EAAED,WAAW,CAACO,QANxB;AAOE,MAAA,MAAM,EAAEP,WAAW,CAACQ,MAPtB;AAQE,MAAA,EAAE,EAAER,WAAW,CAACS;AARlB,OAGOb,YAAY,CAACa,EAHpB;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbY,CAAb,CATC,CAwBD;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUjB,eAAe,CAACiB,IAAD,CAFjC;AAGD,GAJQ,EAIN,CAACjB,eAAD,CAJM,CAAT;AAMA,sBACE;AAAO,IAAA,SAAS,EAAC,gCAAjB;AAAA,2BACE;AAAA,8BACE;AAAA,gCACE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAeGO,IAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAzDQX,gB;;KAAAA,gB;AA2DT,eAAeA,gBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Transaction from \"./Transaction\";\n\n/*PSEUDOCODE \nfunction Transaction param(transactions, setTransacaction, setSearch and search)\n*/\nfunction TransactionsList({\n  search,\n  setSearch,\n  transactions,\n  setTransactions,\n}) {\n  //filter transactions\n  //create a variable that will filter transactions\n\n  //define transactionFilter\n  const transactionFilter = transactions.filter((transaction) =>\n    transaction.description.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const List = transactionFilter.map((transaction) => {\n    return (\n      <Transaction\n        transactions={transaction.transactions}\n        setTransactions={setTransactions}\n        key={transactions.id}\n        date={transactions.date}\n        description={transaction.description}\n        category={transaction.category}\n        amount={transaction.amount}\n        id={transaction.id}\n      />\n    );\n  });\n\n  //useEffect and fetch to grab transactions from locoalhost\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => response.json())\n      .then((data) => setTransactions(data));\n  }, [setTransactions]);\n\n  return (\n    <table className=\"ui celled striped padded table\">\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Description</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Category</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n        </tr>\n        {List}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}